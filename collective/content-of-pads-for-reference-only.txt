Content of the pad markdown boilerplate, for copy/paste or reference

----

## Markdown starting cheatsheet

Bold in the pad will not be considered as bold.
One linebreak = no linebreak. Two linebreaks will generate a paragraph break.
Use <br /> to generate a linebreak if needed.

Text *text in italic* text <br />
text **text in bold** text <br />
text ***text in bold and italic*** text.

Link with title [Link title](http://example.com/)
![Alt text for an image](URL/to/file.jpg)

    Code
    Block

Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML. Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. Since the initial description of Markdown contained ambiguities and unanswered questions, the implementations that appeared over the years have subtle differences and many come with syntax extensions. 

# Header 1
## Header 2
### Header 3

- Item 1
- Item 2
    - Sub-item 1
    - Sub-item 2
- Item 3

1. Numbered item 1
1. Numbered item 2
1. Numbered item 3
5. Numbered item 4

The numbers has no importance, Markdown will number automatically.

More documentation on [https://daringfireball.net/projects/markdown/syntax](https://daringfireball.net/projects/markdown/syntax)

# History

John Gruber created the Markdown language in 2004 in collaboration with Aaron Swartz on the syntax, with the goal of enabling people "to write using an easy-to-read and easy-to-write plain text format, optionally convert it to structurally valid XHTML (or HTML)".

Its key design goal is *readability* â€“ that the language be readable as-is, without looking like it has been marked up with tags or formatting instructions, unlike text formatted with a markup language, such as Rich Text Format (RTF) or HTML, which have obvious tags and formatting instructions. To this end, its main inspiration is the existing conventions for marking up plain text in email, though it also draws from earlier markup languages, notably setext, Textile, and reStructuredText.

Gruber wrote a Perl script, Markdown.pl, which converts marked-up text input to valid, well-formed XHTML or HTML and replaces angle brackets '<' '>' and ampersands '&' with their corresponding character entity references. It can be used as a standalone script, as a plugin for Blosxom or Movable Type, or as a text filter for BBEdit. Markdown has since been re-implemented by others e.g. in a Perl module available on CPAN (Text::Markdown), and in a variety of other programming languages. It is distributed under a BSD-style license and is included with, or available as a plugin for, several content-management systems.

----

Content of the pad CSS boilerplate, for copy/paste or reference

----

body {
    font-size: 12pt;
    line-height: 1.2em;
    font-family: 'alfphabet-iii', sans-serif;
}

h1 {
    font-size: 30pt;
    page-break-before: always;
    font-family: 'alfphabet-iv';
    font-weight: normal;
}

h2 {
    font-size: 24pt;
    font-weight: normal;
}

h3 {
    font-size: 16pt;
    font-weight: normal;
}

img {
    margin-top: 3vh;
    margin-bottom: 3vh;
    max-width: 8cm;
    border-radius: 8px 50px;
}

a {
    color: black;
}

a:after {
    content:" <" attr(href) ">";
}

code {
    font-family: 'notcourier';
}

@page {
    size: 210mm 297mm;

}

@page :left {
    margin: 50mm 50mm;
    @left-middle{
    content: "A title";
    transform: rotate(-90deg);
    }
    @top-center {
    content: "Another title";
    }
    @top-left-corner {
    content: counter(page);
    transform: rotate(-90deg);
    padding-right: 8ch;
    }
}

@page :right {
    margin: 50mm 50mm;
    @right-middle{
    content: "Special Issue XI";
    transform: rotate(90deg);
    }
    @top-center {
    content: "Again a title";
    }
    @top-right-corner {
    transform: rotate(90deg);
    content: counter(page);
    transform: rotate(90deg);
    padding-left: 8ch;
    }
}

@page :first {
    @right-middle {
        visibility: hidden;
    }
    @top-center {
        visibility: hidden;
    }
    @top-right-corner {
        visibility: hidden;
    }
      @bottom-right-corner {
         visibility: hidden;
    }
}

/* Even if brutal, fonts could be embedded directly from remote source */
/* As Ether2html is a way to do publications, not website */

@font-face {
font-family: "notcourier";
src: url("http://osp.kitchen/api/osp.foundry.notcouriersans/9fff7fd811e6982a46b88f7772fa9768b03c6003/blob-data/NotCourierSans.ttf");
}

@font-face {
font-family: "alfphabet-iv";
src: url("http://osp.kitchen/api/osp.foundry.alfphabet/53301035a44a724592c06018a5d5cfb59eee6fd8/blob-data/Alfphabet-IV.otf");
}

@font-face {
font-family: "alfphabet-iii";
src: url("
http://osp.kitchen/api/osp.foundry.alfphabet/78cab074aa56a4e3f7c7d0b10aaf6cd14dca9fad/blob-data/Alfphabet-III.otf");
}
